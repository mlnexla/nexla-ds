---
description: Figma Dev Mode MCP + Design Style Rules
globs:
  - "**/*.tsx"
alwaysApply: true
---
- Use Tailwind classes defined in the design system tokens.
- Use semantic classnames: prefer `.button-primary` over `.blue-btn`.
- Do NOT hardcode colors or spacing; use tokens like `bg-primary`, `p-4`, etc.
- Use PascalCase for all components.
- DO NOT import new icon packages; all icons come from Figma assets.

# Icon Component Guidelines
- Icon components use naming convention: `Icon[Name][Style]` (e.g., `AngleDownIcon`)
- All icons use 24x24 viewBox with `fill="none"` and `xmlns="http://www.w3.org/2000/svg"`
- When creating directional icons, verify visual direction matches the name (e.g., AngleDown should point down)
- SVG paths from large viewBoxes (456x24) need coordinate transformation to fit 24x24
- Always test visual output - SVG paths may need rewriting if they display incorrectly
- When adding icons to IconsDemo, update both component import and SVG content string
- Export new icons from `src/components/icons/index.ts`

## SVG Data Processing Rules
- **ALWAYS clarify source format first**: "I see a composite SVG with dimensions X×Y. Should I extract individual icons or use specific coordinate ranges?"
- **Default assumption**: Unless specified otherwise, all icons should render at 24×24 pixels by default
- **ViewBox strategy**: Use `viewBox="0 0 24 24"` when possible; adjust viewBox (not scale coordinates) if paths use different coordinate systems
- **Coordinate validation**: If path coordinates exceed 24 or seem unusually large (>100), confirm coordinate system before implementing
- **Visual verification**: Always mention testing icons at 24×24 size after implementation
- **No coordinate scaling**: Prefer adjusting viewBox over mathematically scaling path coordinates to avoid precision loss

## Required Clarifications for Icon Tasks
When receiving SVG data for icons, MUST ask these questions if not clear:
1. "What's the source format?" (individual exports vs composite SVG vs design file)
2. "What's the target render size?" (confirm 24×24 default assumption)
3. "Do coordinates need transformation?" (if paths show large numbers like 900+)
4. "Which specific icons?" (if dealing with composite/multi-icon source)

## Implementation Validation Steps
Before completing icon work:
1. Confirm all icons render properly at 24×24
2. Verify paths don't extend far beyond viewBox bounds  
3. Test copy-to-clipboard functionality in demo
4. Check that visual appearance matches intended design

# Component Structure
- Each component has its own folder: `src/components/ComponentName/`
- Include: ComponentName.tsx, ComponentName.css, index.ts
- Export from `src/components/index.ts`
- Create demo in `src/demos/ComponentNameDemo.tsx`
- Use TypeScript interfaces for all props
- Follow established prop patterns: className, size, color for icons